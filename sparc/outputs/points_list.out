[(GlobalBinding
    (DBind
       { dtyp_name = { name = "point" };
         bind_dty =
         [{ id = { name = "PointTwo" }; typ = (Some (Prod [Int; Int])) };
           { id = { name = "Point3D" }; typ = (Some (Prod [Int; Int; Int])) }
           ]
         }));
  (GlobalBinding
     (TBind
        { typ_name = { name = "point2" }; bind_typ = (Typ { name = "point" })
          }));
  (GlobalBinding
     (DBind
        { dtyp_name = { name = "plist" };
          bind_dty =
          [{ id = { name = "Nil" }; typ = (Some TUnit) };
            { id = { name = "Cons" };
              typ =
              (Some (Prod
                       [(Typ { name = "point" }); (Typ { name = "plist" })]))
              }
            ]
          }));
  (Value
     (VCon
        { vconstructor = { name = "Cons" };
          value =
          (Some (VPair
                   { v1 =
                     (VCon
                        { vconstructor = { name = "PointTwo" };
                          value =
                          (Some (VPair
                                   { v1 = (Lit (Num 0.)); v2 = (Lit (Num 0.))
                                     }))
                          });
                     v2 =
                     (VCon
                        { vconstructor = { name = "Cons" };
                          value =
                          (Some (VPair
                                   { v1 =
                                     (VCon
                                        { vconstructor =
                                          { name = "PointTwo" };
                                          value =
                                          (Some (VPair
                                                   { v1 = (Lit (Num 0.));
                                                     v2 = (Lit (Num 1.)) }))
                                          });
                                     v2 =
                                     (VCon
                                        { vconstructor = { name = "Cons" };
                                          value =
                                          (Some (VPair
                                                   { v1 =
                                                     (VCon
                                                        { vconstructor =
                                                          { name = "PointTwo"
                                                            };
                                                          value =
                                                          (Some (VPair
                                                                   { v1 =
                                                                    (Lit
                                                                    (Num 0.));
                                                                    v2 =
                                                                    (
                                                                    Lit
                                                                    (Num 2.))
                                                                    }))
                                                          });
                                                     v2 =
                                                     (VCon
                                                        { vconstructor =
                                                          { name = "Nil" };
                                                          value = None })
                                                     }))
                                          })
                                     }))
                          })
                     }))
          }))
  ]
type point = PointTwo of int * int | Point3D of int * int * int
type point2 = point
type plist = Nil of unit | Cons of point * plist
Cons (PointTwo (0, 0), Cons (PointTwo (0, 1), Cons (PointTwo (0, 2), Nil)))
